import { c as create_ssr_component, b as add_attribute, d as each, v as validate_component } from "../../chunks/ssr.js";
import "../../chunks/client.js";
import { E as Environment, R as RainOverlay } from "../../chunks/Environment.js";
const BloodSplatter = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let id = `filter-${Math.random().toString(36).substr(2, 9)}`;
  return `<svg class="fixed inset-0 pointer-events-none z-20 opacity-80" width="100%" height="100%"><defs><filter${add_attribute("id", id, 0)}><feTurbulence type="fractalNoise" baseFrequency="0.04" numOctaves="5" result="noise"></feTurbulence><feColorMatrix type="matrix" values="1 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 -0.5 1" in="noise" result="colorNoise"></feColorMatrix><feComposite operator="in" in2="SourceGraphic"></feComposite></filter></defs><g${add_attribute("filter", `url(#${id})`, 0)}><path d="M200,150 
         C220,130 240,140 250,120 
         C260,100 280,110 290,90 
         C300,70 310,80 320,60 
         C330,40 350,50 360,30" fill="#8B0000" transform="rotate(15)"></path><g transform="translate(100, 100)">${each(Array(20), (_, i) => {
    return `<circle${add_attribute("cx", Math.random() * 200, 0)}${add_attribute("cy", Math.random() * 200, 0)}${add_attribute("r", Math.random() * 3 + 1, 0)} fill="#8B0000"></circle>`;
  })}</g><path d="M150,50 
         Q148,80 146,100 
         T144,150 
         Q142,180 140,200" stroke="#8B0000" stroke-width="4" fill="none"></path><path d="M160,70 
         Q158,90 156,110 
         T154,160" stroke="#8B0000" stroke-width="3" fill="none"></path><path d="M300,100 
         Q350,90 400,85 
         T500,80" stroke="#8B0000" stroke-width="2" fill="none"></path><path d="M250,300 
         C270,290 290,295 310,290 
         C330,285 350,288 370,285 
         C390,282 410,280 430,282 
         C450,284 470,288 490,290 
         C510,292 530,290 550,295 
         C570,300 590,298 610,305 
         Z" fill="#8B0000"></path>${each(Array(15), (_, i) => {
    return `<circle${add_attribute("cx", Math.random() * 600, 0)}${add_attribute("cy", Math.random() * 400, 0)}${add_attribute("r", Math.random() * 2 + 0.5, 0)} fill="#8B0000"></circle>`;
  })}</g></svg>`;
});
const css$1 = {
  code: ".crime-scene-tape.svelte-dtw9lb{position:absolute;top:50%;left:0;transform:translateY(-50%) rotate(-5deg);z-index:30;width:100%;overflow:hidden;opacity:0.95}.tape-body.svelte-dtw9lb{transform-origin:center bottom;animation:svelte-dtw9lb-curl 8s ease-in-out infinite}.tape-text-container.svelte-dtw9lb{animation:svelte-dtw9lb-waver 6s ease-in-out infinite}.tape-text.svelte-dtw9lb{font-family:'Impact', sans-serif;letter-spacing:3px}@keyframes svelte-dtw9lb-waver{0%,100%{transform:translateY(0) rotate(0)}50%{transform:translateY(-1px) rotate(1deg)}}@keyframes svelte-dtw9lb-curl{0%,100%{transform:perspective(400px) rotateX(0deg)}50%{transform:perspective(400px) rotateX(3deg)}}@media(max-width: 768px){.tape-text.svelte-dtw9lb{font-size:20px}}",
  map: `{"version":3,"file":"CrimeSceneTape.svelte","sources":["CrimeSceneTape.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n\\n  let tapeWidth;\\n  let tapeHeight;\\n  let tapeColor = '#FFF200';\\n  let textColor = '#000000';\\n\\n  onMount(() => {\\n    const updateSize = () => {\\n      tapeWidth = window.innerWidth;\\n      tapeHeight = Math.min(80, window.innerHeight * 0.1);\\n    };\\n\\n    updateSize();\\n    window.addEventListener('resize', updateSize);\\n\\n    return () => {\\n      window.removeEventListener('resize', updateSize);\\n    };\\n  });\\n<\/script>\\n\\n<div class=\\"crime-scene-tape\\">\\n  <svg width={tapeWidth} height={tapeHeight}>\\n    <defs>\\n      <filter id=\\"noise\\" x=\\"0%\\" y=\\"0%\\" width=\\"100%\\" height=\\"100%\\">\\n        <feTurbulence type=\\"fractalNoise\\" baseFrequency=\\"0.3\\" numOctaves=\\"2\\" result=\\"noise\\"/>\\n        <feDisplacementMap in=\\"SourceGraphic\\" in2=\\"noise\\" scale=\\"3\\" xChannelSelector=\\"R\\" yChannelSelector=\\"G\\"/>\\n      </filter>\\n      <filter id=\\"worn\\">\\n        <feTurbulence type=\\"turbulence\\" baseFrequency=\\"0.02\\" numOctaves=\\"2\\" result=\\"turbulence\\"/>\\n        <feDisplacementMap in=\\"SourceGraphic\\" in2=\\"turbulence\\" scale=\\"8\\"/>\\n      </filter>\\n      <mask id=\\"tatterMask\\">\\n        <rect width=\\"100%\\" height=\\"100%\\" fill=\\"white\\"/>\\n        <g filter=\\"url(#worn)\\">\\n          {#each Array(12) as _, i}\\n            <circle \\n              cx={Math.random() * 100 + '%'} \\n              cy={Math.random() * 100 + '%'} \\n              r={Math.random() * 3 + 2} \\n              fill=\\"black\\" \\n            />\\n          {/each}\\n        </g>\\n      </mask>\\n    </defs>\\n    \\n    <!-- Curled edge shadow -->\\n    <path \\n      d={\`M0 \${tapeHeight} \\n          C \${tapeWidth * 0.2} \${tapeHeight * 1.1} \\n            \${tapeWidth * 0.8} \${tapeHeight * 0.9} \\n            \${tapeWidth} \${tapeHeight}\`}\\n      fill=\\"rgba(0,0,0,0.2)\\"\\n    />\\n    \\n    <!-- Base tape with tatter effect -->\\n    <g mask=\\"url(#tatterMask)\\" class=\\"tape-body\\">\\n      <rect width={tapeWidth} height={tapeHeight} fill={tapeColor} filter=\\"url(#noise)\\"/>\\n      <!-- Worn edges -->\\n      <path \\n        d={\`M0 0 L\${tapeWidth} 0 L\${tapeWidth} \${tapeHeight} L0 \${tapeHeight}Z\`} \\n        fill=\\"none\\" \\n        stroke=\\"rgba(0,0,0,0.2)\\" \\n        stroke-width=\\"1.5\\" \\n        stroke-dasharray=\\"3 2\\"\\n        filter=\\"url(#worn)\\"\\n      />\\n    </g>\\n\\n    <!-- Text with reduced distress effect -->\\n    <g class=\\"tape-text-container\\">\\n      <text \\n        x=\\"50%\\" \\n        y=\\"50%\\" \\n        dominant-baseline=\\"middle\\" \\n        text-anchor=\\"middle\\" \\n        fill={textColor} \\n        font-size=\\"28\\" \\n        font-weight=\\"bold\\" \\n        class=\\"tape-text\\"\\n        stroke={textColor}\\n        stroke-width=\\"0.3\\"\\n      >\\n        CRIME SCENE - DO NOT CROSS\\n      </text>\\n    </g>\\n  </svg>\\n</div>\\n\\n<style>\\n  .crime-scene-tape {\\n    position: absolute;\\n    top: 50%;\\n    left: 0;\\n    transform: translateY(-50%) rotate(-5deg);\\n    z-index: 30;\\n    width: 100%;\\n    overflow: hidden;\\n    opacity: 0.95;\\n  }\\n\\n  .tape-body {\\n    transform-origin: center bottom;\\n    animation: curl 8s ease-in-out infinite;\\n  }\\n\\n  .tape-text-container {\\n    animation: waver 6s ease-in-out infinite;\\n  }\\n\\n  .tape-text {\\n    font-family: 'Impact', sans-serif;\\n    letter-spacing: 3px;\\n  }\\n\\n  @keyframes waver {\\n    0%, 100% { transform: translateY(0) rotate(0); }\\n    50% { transform: translateY(-1px) rotate(1deg); }\\n  }\\n\\n  @keyframes curl {\\n    0%, 100% { transform: perspective(400px) rotateX(0deg); }\\n    50% { transform: perspective(400px) rotateX(3deg); }\\n  }\\n\\n  @media (max-width: 768px) {\\n    .tape-text {\\n      font-size: 20px;\\n    }\\n  }\\n</style>\\n"],"names":[],"mappings":"AA6FE,+BAAkB,CAChB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,WAAW,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CACzC,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IACX,CAEA,wBAAW,CACT,gBAAgB,CAAE,MAAM,CAAC,MAAM,CAC/B,SAAS,CAAE,kBAAI,CAAC,EAAE,CAAC,WAAW,CAAC,QACjC,CAEA,kCAAqB,CACnB,SAAS,CAAE,mBAAK,CAAC,EAAE,CAAC,WAAW,CAAC,QAClC,CAEA,wBAAW,CACT,WAAW,CAAE,QAAQ,CAAC,CAAC,UAAU,CACjC,cAAc,CAAE,GAClB,CAEA,WAAW,mBAAM,CACf,EAAE,CAAE,IAAK,CAAE,SAAS,CAAE,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAG,CAC/C,GAAI,CAAE,SAAS,CAAE,WAAW,IAAI,CAAC,CAAC,OAAO,IAAI,CAAG,CAClD,CAEA,WAAW,kBAAK,CACd,EAAE,CAAE,IAAK,CAAE,SAAS,CAAE,YAAY,KAAK,CAAC,CAAC,QAAQ,IAAI,CAAG,CACxD,GAAI,CAAE,SAAS,CAAE,YAAY,KAAK,CAAC,CAAC,QAAQ,IAAI,CAAG,CACrD,CAEA,MAAO,YAAY,KAAK,CAAE,CACxB,wBAAW,CACT,SAAS,CAAE,IACb,CACF"}`
};
let tapeColor = "#FFF200";
let textColor = "#000000";
const CrimeSceneTape = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let tapeWidth;
  let tapeHeight;
  $$result.css.add(css$1);
  return `<div class="crime-scene-tape svelte-dtw9lb"><svg${add_attribute("width", tapeWidth, 0)}${add_attribute("height", tapeHeight, 0)}><defs><filter id="noise" x="0%" y="0%" width="100%" height="100%"><feTurbulence type="fractalNoise" baseFrequency="0.3" numOctaves="2" result="noise"></feTurbulence><feDisplacementMap in="SourceGraphic" in2="noise" scale="3" xChannelSelector="R" yChannelSelector="G"></feDisplacementMap></filter><filter id="worn"><feTurbulence type="turbulence" baseFrequency="0.02" numOctaves="2" result="turbulence"></feTurbulence><feDisplacementMap in="SourceGraphic" in2="turbulence" scale="8"></feDisplacementMap></filter><mask id="tatterMask"><rect width="100%" height="100%" fill="white"></rect><g filter="url(#worn)">${each(Array(12), (_, i) => {
    return `<circle${add_attribute("cx", Math.random() * 100 + "%", 0)}${add_attribute("cy", Math.random() * 100 + "%", 0)}${add_attribute("r", Math.random() * 3 + 2, 0)} fill="black"></circle>`;
  })}</g></mask></defs><path${add_attribute(
    "d",
    `M0 ${tapeHeight} 
          C ${tapeWidth * 0.2} ${tapeHeight * 1.1} 
            ${tapeWidth * 0.8} ${tapeHeight * 0.9} 
            ${tapeWidth} ${tapeHeight}`,
    0
  )} fill="rgba(0,0,0,0.2)"></path><g mask="url(#tatterMask)" class="tape-body svelte-dtw9lb"><rect${add_attribute("width", tapeWidth, 0)}${add_attribute("height", tapeHeight, 0)}${add_attribute("fill", tapeColor, 0)} filter="url(#noise)"></rect><path${add_attribute("d", `M0 0 L${tapeWidth} 0 L${tapeWidth} ${tapeHeight} L0 ${tapeHeight}Z`, 0)} fill="none" stroke="rgba(0,0,0,0.2)" stroke-width="1.5" stroke-dasharray="3 2" filter="url(#worn)"></path></g><g class="tape-text-container svelte-dtw9lb"><text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle"${add_attribute("fill", textColor, 0)} font-size="28" font-weight="bold" class="tape-text svelte-dtw9lb"${add_attribute("stroke", textColor, 0)} stroke-width="0.3">CRIME SCENE - DO NOT CROSS</text></g></svg> </div>`;
});
const css = {
  code: "body{font-family:'Georgia', serif;overflow:hidden}.environment-wrapper.svelte-uz6h7.svelte-uz6h7{transform-origin:center center}.environment-container.svelte-uz6h7.svelte-uz6h7{transform-origin:center center;transition:transform 3s ease-in-out;will-change:transform}.environment-wrapper.transitioning.svelte-uz6h7 .environment-container.svelte-uz6h7{transform:scale(var(--scale, 1.8))}.overlay.svelte-uz6h7.svelte-uz6h7{background:black;opacity:0;transition:opacity 3s ease-in;pointer-events:none}.overlay.transitioning.svelte-uz6h7.svelte-uz6h7{opacity:1}.fade-out.svelte-uz6h7.svelte-uz6h7{transition:opacity 2s ease-in;opacity:0}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import { goto } from '$app/navigation';\\n  import { userName } from '$lib/stores/userStore';\\n  import RainOverlay from '$lib/components/RainOverlay.svelte';\\n  import BloodSplatter from '$lib/components/BloodSplatter.svelte';\\n  import CrimeSceneTape from '$lib/components/CrimeSceneTape.svelte';\\n  import Environment from '$lib/components/Environment.svelte';\\n\\n  let heading;\\n  let name = '';\\n  let error = '';\\n  let isTransitioning = false;\\n  let scale = 1.0;\\n  \\n  onMount(() => {\\n    if (heading) {\\n      heading.style.opacity = '1';\\n      heading.style.transform = 'translateY(0)';\\n      heading.style.transition = 'opacity 1s, transform 1s';\\n    }\\n  });\\n\\n  const handleSubmit = async (e) => {\\n    e.preventDefault();\\n    if (name.trim() === '') {\\n      error = 'We need a name to proceed, dear guest.';\\n      return;\\n    }\\n    userName.set(name);\\n    isTransitioning = true;\\n    scale = 1.8;\\n    \\n    await new Promise(resolve => setTimeout(resolve, 3000));\\n    goto('/mansion');\\n  };\\n<\/script>\\n\\n<svelte:head>\\n  <title>Crime Scene Investigation</title>\\n</svelte:head>\\n\\n<div class=\\"fixed inset-0 overflow-hidden bg-[var(--burton-black)]\\">\\n  <div class=\\"environment-wrapper absolute inset-0 z-10 flex items-center justify-center\\" class:transitioning={isTransitioning}>\\n    <div class=\\"environment-container w-full h-full\\">\\n      <Environment intensity={isTransitioning ? 1.5 : 1.0} {scale} />\\n    </div>\\n  </div>\\n  <div class=\\"overlay absolute inset-0 z-20\\" class:transitioning={isTransitioning}></div>\\n  <RainOverlay />\\n  <BloodSplatter />\\n  \\n  <div class=\\"absolute inset-0 z-40 flex flex-col items-center px-4\\" class:fade-out={isTransitioning}>\\n    <h1 \\n      bind:this={heading}\\n      class=\\"text-5xl font-bold text-center mt-8 opacity-0 text-red-600 md:text-5xl text-4xl burton-text-shadow\\"\\n      style=\\"transform: translateY(50px)\\"\\n    >\\n      Crime Scene Investigation\\n    </h1>\\n\\n    <div class=\\"flex flex-col items-center justify-center mt-16 text-[var(--burton-white)]\\">\\n      <h2 class=\\"text-3xl font-bold mb-4 burton-text-shadow\\">Welcome, Stranger...</h2>\\n      <p class=\\"mb-6 text-lg burton-text-shadow\\">What shall we call you tonight?</p>\\n    </div>\\n\\n    <CrimeSceneTape />\\n    \\n    <form on:submit={handleSubmit} class=\\"flex flex-col items-center gap-4 mt-16 md:mt-16 mt-32\\">\\n      <input\\n        type=\\"text\\"\\n        bind:value={name}\\n        placeholder=\\"Enter your name\\"\\n        class=\\"px-4 py-2 border border-[var(--burton-purple)] rounded-md bg-[var(--burton-charcoal)] text-[var(--burton-white)] placeholder-gray-400 w-full max-w-xs\\"\\n      />\\n      {#if error}\\n        <p class=\\"text-red-500 text-sm burton-text-shadow\\">{error}</p>\\n      {/if}\\n      <button\\n        type=\\"submit\\"\\n        class=\\"burton-button w-full max-w-xs\\"\\n      >\\n        Continue\\n      </button>\\n    </form>\\n  </div>\\n</div>\\n\\n<style>\\n  :global(body) {\\n    font-family: 'Georgia', serif;\\n    overflow: hidden;\\n  }\\n\\n  .environment-wrapper {\\n    transform-origin: center center;\\n  }\\n\\n  .environment-container {\\n    transform-origin: center center;\\n    transition: transform 3s ease-in-out;\\n    will-change: transform;\\n  }\\n\\n  .environment-wrapper.transitioning .environment-container {\\n    transform: scale(var(--scale, 1.8));\\n  }\\n\\n  .overlay {\\n    background: black;\\n    opacity: 0;\\n    transition: opacity 3s ease-in;\\n    pointer-events: none;\\n  }\\n\\n  .overlay.transitioning {\\n    opacity: 1;\\n  }\\n\\n  .fade-out {\\n    transition: opacity 2s ease-in;\\n    opacity: 0;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAyFU,IAAM,CACZ,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,QAAQ,CAAE,MACZ,CAEA,8CAAqB,CACnB,gBAAgB,CAAE,MAAM,CAAC,MAC3B,CAEA,gDAAuB,CACrB,gBAAgB,CAAE,MAAM,CAAC,MAAM,CAC/B,UAAU,CAAE,SAAS,CAAC,EAAE,CAAC,WAAW,CACpC,WAAW,CAAE,SACf,CAEA,oBAAoB,2BAAc,CAAC,mCAAuB,CACxD,SAAS,CAAE,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CACpC,CAEA,kCAAS,CACP,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAC9B,cAAc,CAAE,IAClB,CAEA,QAAQ,wCAAe,CACrB,OAAO,CAAE,CACX,CAEA,mCAAU,CACR,UAAU,CAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAC9B,OAAO,CAAE,CACX"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let heading;
  let name = "";
  let scale = 1;
  $$result.css.add(css);
  return `${$$result.head += `<!-- HEAD_svelte-nygzp9_START -->${$$result.title = `<title>Crime Scene Investigation</title>`, ""}<!-- HEAD_svelte-nygzp9_END -->`, ""} <div class="fixed inset-0 overflow-hidden bg-[var(--burton-black)]"><div class="${[
    "environment-wrapper absolute inset-0 z-10 flex items-center justify-center svelte-uz6h7",
    ""
  ].join(" ").trim()}"><div class="environment-container w-full h-full svelte-uz6h7">${validate_component(Environment, "Environment").$$render(
    $$result,
    {
      intensity: 1,
      scale
    },
    {},
    {}
  )}</div></div> <div class="${[
    "overlay absolute inset-0 z-20 svelte-uz6h7",
    ""
  ].join(" ").trim()}"></div> ${validate_component(RainOverlay, "RainOverlay").$$render($$result, {}, {}, {})} ${validate_component(BloodSplatter, "BloodSplatter").$$render($$result, {}, {}, {})} <div class="${[
    "absolute inset-0 z-40 flex flex-col items-center px-4 svelte-uz6h7",
    ""
  ].join(" ").trim()}"><h1 class="text-5xl font-bold text-center mt-8 opacity-0 text-red-600 md:text-5xl text-4xl burton-text-shadow" style="transform: translateY(50px)"${add_attribute("this", heading, 0)} data-svelte-h="svelte-3dli8s">Crime Scene Investigation</h1> <div class="flex flex-col items-center justify-center mt-16 text-[var(--burton-white)]" data-svelte-h="svelte-wen7zv"><h2 class="text-3xl font-bold mb-4 burton-text-shadow">Welcome, Stranger...</h2> <p class="mb-6 text-lg burton-text-shadow">What shall we call you tonight?</p></div> ${validate_component(CrimeSceneTape, "CrimeSceneTape").$$render($$result, {}, {}, {})} <form class="flex flex-col items-center gap-4 mt-16 md:mt-16 mt-32"><input type="text" placeholder="Enter your name" class="px-4 py-2 border border-[var(--burton-purple)] rounded-md bg-[var(--burton-charcoal)] text-[var(--burton-white)] placeholder-gray-400 w-full max-w-xs"${add_attribute("value", name, 0)}> ${``} <button type="submit" class="burton-button w-full max-w-xs" data-svelte-h="svelte-ykynot">Continue</button></form></div> </div>`;
});
export {
  Page as default
};
//# sourceMappingURL=_page.svelte.js.map
